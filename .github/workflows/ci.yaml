name: Cockroach Terraform Provider CI
on:
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

jobs:

  # pre job run golangci-lint
  go-lint:
    name: 'Golint'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.64.8
          working-directory: .
          args: --timeout=5m

  # pre job to run tests
  integration-test:
    name: integration-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      # We don't pin the version of terraform to ensure the tests run against
      # the latest CLI version.
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Tests
        run: make test

  # pre job to build terraform-provider on every pull request
  pre-build:
    name: build-terraform-provider
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Build terraform-provider
        run: make install

  docs-check:
    name: docs-generated-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      # Terraform fmt is run on the docs directory, don't bother pinning this
      # version.  This will install the latest version. If there is a difference
      # in format between the latest version and the local version, the
      # developer should update.
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Build docs
        run: make generate

      - name: Check changed files
        id: changed-files
        run: |
          changed_files=$(git diff --name-only | xargs)
          if [ "${#changed_files}" -gt "0" ]; then
            echo "Unexpected changes found in the repo, did you remember to run \`make generate\`?" > $GITHUB_STEP_SUMMARY
            echo "Changed files:" >> $GITHUB_STEP_SUMMARY
            for file in ${changed_files}; do
              echo "\`$file\`" >> $GITHUB_STEP_SUMMARY
            done
            exit 1
          fi
