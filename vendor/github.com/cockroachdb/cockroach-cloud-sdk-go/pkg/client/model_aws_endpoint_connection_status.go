// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-09-20

package client

import (
	"encoding/json"
	"fmt"
)

// AWSEndpointConnectionStatus The statuses map to the statuses returned by the AWS API.
type AWSEndpointConnectionStatus string

// List of AWSEndpointConnectionStatus.
const (
	AWSENDPOINTCONNECTIONSTATUS_PENDING            AWSEndpointConnectionStatus = "ENDPOINT_PENDING"
	AWSENDPOINTCONNECTIONSTATUS_PENDING_ACCEPTANCE AWSEndpointConnectionStatus = "ENDPOINT_PENDING_ACCEPTANCE"
	AWSENDPOINTCONNECTIONSTATUS_AVAILABLE          AWSEndpointConnectionStatus = "ENDPOINT_AVAILABLE"
	AWSENDPOINTCONNECTIONSTATUS_DELETING           AWSEndpointConnectionStatus = "ENDPOINT_DELETING"
	AWSENDPOINTCONNECTIONSTATUS_DELETED            AWSEndpointConnectionStatus = "ENDPOINT_DELETED"
	AWSENDPOINTCONNECTIONSTATUS_REJECTED           AWSEndpointConnectionStatus = "ENDPOINT_REJECTED"
	AWSENDPOINTCONNECTIONSTATUS_FAILED             AWSEndpointConnectionStatus = "ENDPOINT_FAILED"
	AWSENDPOINTCONNECTIONSTATUS_EXPIRED            AWSEndpointConnectionStatus = "ENDPOINT_EXPIRED"
)

// All allowed values of AWSEndpointConnectionStatus enum.
var AllowedAWSEndpointConnectionStatusEnumValues = []AWSEndpointConnectionStatus{
	"ENDPOINT_PENDING",
	"ENDPOINT_PENDING_ACCEPTANCE",
	"ENDPOINT_AVAILABLE",
	"ENDPOINT_DELETING",
	"ENDPOINT_DELETED",
	"ENDPOINT_REJECTED",
	"ENDPOINT_FAILED",
	"ENDPOINT_EXPIRED",
}

func (v *AWSEndpointConnectionStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AWSEndpointConnectionStatus(value)
	for _, existing := range AllowedAWSEndpointConnectionStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AWSEndpointConnectionStatus", value)
}

// NewAWSEndpointConnectionStatusFromValue returns a pointer to a valid AWSEndpointConnectionStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewAWSEndpointConnectionStatusFromValue(v string) (*AWSEndpointConnectionStatus, error) {
	ev := AWSEndpointConnectionStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AWSEndpointConnectionStatus: valid values are %v", v, AllowedAWSEndpointConnectionStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v AWSEndpointConnectionStatus) IsValid() bool {
	for _, existing := range AllowedAWSEndpointConnectionStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AWSEndpointConnectionStatus value.
func (v AWSEndpointConnectionStatus) Ptr() *AWSEndpointConnectionStatus {
	return &v
}
