// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2023-04-10

package client

// CreateClusterSpecification struct for CreateClusterSpecification.
type CreateClusterSpecification struct {
	Dedicated        *DedicatedClusterCreateSpecification `json:"dedicated,omitempty"`
	DeleteProtection *DeleteProtectionStateType           `json:"delete_protection,omitempty"`
	// Limited Access: The parent ID is a folder ID. An empty string or \"root\" will create a cluster at the root level.
	ParentId   *string                               `json:"parent_id,omitempty"`
	Serverless *ServerlessClusterCreateSpecification `json:"serverless,omitempty"`
}

// NewCreateClusterSpecification instantiates a new CreateClusterSpecification object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClusterSpecification() *CreateClusterSpecification {
	p := CreateClusterSpecification{}
	return &p
}

// GetDedicated returns the Dedicated field value if set, zero value otherwise.
func (o *CreateClusterSpecification) GetDedicated() DedicatedClusterCreateSpecification {
	if o == nil || o.Dedicated == nil {
		var ret DedicatedClusterCreateSpecification
		return ret
	}
	return *o.Dedicated
}

// SetDedicated gets a reference to the given DedicatedClusterCreateSpecification and assigns it to the Dedicated field.
func (o *CreateClusterSpecification) SetDedicated(v DedicatedClusterCreateSpecification) {
	o.Dedicated = &v
}

// GetDeleteProtection returns the DeleteProtection field value if set, zero value otherwise.
func (o *CreateClusterSpecification) GetDeleteProtection() DeleteProtectionStateType {
	if o == nil || o.DeleteProtection == nil {
		var ret DeleteProtectionStateType
		return ret
	}
	return *o.DeleteProtection
}

// SetDeleteProtection gets a reference to the given DeleteProtectionStateType and assigns it to the DeleteProtection field.
func (o *CreateClusterSpecification) SetDeleteProtection(v DeleteProtectionStateType) {
	o.DeleteProtection = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CreateClusterSpecification) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *CreateClusterSpecification) SetParentId(v string) {
	o.ParentId = &v
}

// GetServerless returns the Serverless field value if set, zero value otherwise.
func (o *CreateClusterSpecification) GetServerless() ServerlessClusterCreateSpecification {
	if o == nil || o.Serverless == nil {
		var ret ServerlessClusterCreateSpecification
		return ret
	}
	return *o.Serverless
}

// SetServerless gets a reference to the given ServerlessClusterCreateSpecification and assigns it to the Serverless field.
func (o *CreateClusterSpecification) SetServerless(v ServerlessClusterCreateSpecification) {
	o.Serverless = &v
}
