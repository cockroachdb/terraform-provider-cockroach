// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-03-31

package client

import (
	"encoding/json"
)

// DedicatedMachineTypeSpecification struct for DedicatedMachineTypeSpecification.
type DedicatedMachineTypeSpecification struct {
	// MachineType is the machine type identifier within the given cloud provider, ex. m5.xlarge, n2-standard-4.
	MachineType *string `json:"machine_type,omitempty"`
	// NumVirtualCPUs may be used to automatically select a machine type according to the desired number of vCPUs.
	NumVirtualCpus       *int32 `json:"num_virtual_cpus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type dedicatedMachineTypeSpecification DedicatedMachineTypeSpecification

// NewDedicatedMachineTypeSpecification instantiates a new DedicatedMachineTypeSpecification object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDedicatedMachineTypeSpecification() *DedicatedMachineTypeSpecification {
	p := DedicatedMachineTypeSpecification{}
	return &p
}

// GetMachineType returns the MachineType field value if set, zero value otherwise.
func (o *DedicatedMachineTypeSpecification) GetMachineType() string {
	if o == nil || o.MachineType == nil {
		var ret string
		return ret
	}
	return *o.MachineType
}

// SetMachineType gets a reference to the given string and assigns it to the MachineType field.
func (o *DedicatedMachineTypeSpecification) SetMachineType(v string) {
	o.MachineType = &v
}

// GetNumVirtualCpus returns the NumVirtualCpus field value if set, zero value otherwise.
func (o *DedicatedMachineTypeSpecification) GetNumVirtualCpus() int32 {
	if o == nil || o.NumVirtualCpus == nil {
		var ret int32
		return ret
	}
	return *o.NumVirtualCpus
}

// SetNumVirtualCpus gets a reference to the given int32 and assigns it to the NumVirtualCpus field.
func (o *DedicatedMachineTypeSpecification) SetNumVirtualCpus(v int32) {
	o.NumVirtualCpus = &v
}

func (o DedicatedMachineTypeSpecification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MachineType != nil {
		toSerialize["machine_type"] = o.MachineType
	}
	if o.NumVirtualCpus != nil {
		toSerialize["num_virtual_cpus"] = o.NumVirtualCpus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *DedicatedMachineTypeSpecification) UnmarshalJSON(bytes []byte) (err error) {
	varDedicatedMachineTypeSpecification := dedicatedMachineTypeSpecification{}

	if err = json.Unmarshal(bytes, &varDedicatedMachineTypeSpecification); err == nil {
		*o = DedicatedMachineTypeSpecification(varDedicatedMachineTypeSpecification)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "machine_type")
		delete(additionalProperties, "num_virtual_cpus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}
