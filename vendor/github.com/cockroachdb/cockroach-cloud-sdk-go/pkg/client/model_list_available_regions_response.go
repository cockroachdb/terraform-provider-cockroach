// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-03-31

package client

import (
	"encoding/json"
)

// ListAvailableRegionsResponse struct for ListAvailableRegionsResponse.
type ListAvailableRegionsResponse struct {
	Regions              []CloudProviderRegion     `json:"regions"`
	Pagination           *KeysetPaginationResponse `json:"pagination,omitempty"`
	AdditionalProperties map[string]interface{}
}

type listAvailableRegionsResponse ListAvailableRegionsResponse

// NewListAvailableRegionsResponse instantiates a new ListAvailableRegionsResponse object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAvailableRegionsResponse(regions []CloudProviderRegion) *ListAvailableRegionsResponse {
	p := ListAvailableRegionsResponse{}
	p.Regions = regions
	return &p
}

// NewListAvailableRegionsResponseWithDefaults instantiates a new ListAvailableRegionsResponse object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAvailableRegionsResponseWithDefaults() *ListAvailableRegionsResponse {
	p := ListAvailableRegionsResponse{}
	return &p
}

// GetRegions returns the Regions field value.
func (o *ListAvailableRegionsResponse) GetRegions() []CloudProviderRegion {
	if o == nil {
		var ret []CloudProviderRegion
		return ret
	}

	return o.Regions
}

// SetRegions sets field value.
func (o *ListAvailableRegionsResponse) SetRegions(v []CloudProviderRegion) {
	o.Regions = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ListAvailableRegionsResponse) GetPagination() KeysetPaginationResponse {
	if o == nil || o.Pagination == nil {
		var ret KeysetPaginationResponse
		return ret
	}
	return *o.Pagination
}

// SetPagination gets a reference to the given KeysetPaginationResponse and assigns it to the Pagination field.
func (o *ListAvailableRegionsResponse) SetPagination(v KeysetPaginationResponse) {
	o.Pagination = &v
}

func (o ListAvailableRegionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["regions"] = o.Regions
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ListAvailableRegionsResponse) UnmarshalJSON(bytes []byte) (err error) {
	varListAvailableRegionsResponse := listAvailableRegionsResponse{}

	if err = json.Unmarshal(bytes, &varListAvailableRegionsResponse); err == nil {
		*o = ListAvailableRegionsResponse(varListAvailableRegionsResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "regions")
		delete(additionalProperties, "pagination")
		o.AdditionalProperties = additionalProperties
	}

	return err
}
