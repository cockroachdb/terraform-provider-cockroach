// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-03-31

package client

import (
	"encoding/json"
)

// ListClustersResponse struct for ListClustersResponse.
type ListClustersResponse struct {
	Clusters             []Cluster                 `json:"clusters"`
	Pagination           *KeysetPaginationResponse `json:"pagination,omitempty"`
	AdditionalProperties map[string]interface{}
}

type listClustersResponse ListClustersResponse

// NewListClustersResponse instantiates a new ListClustersResponse object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClustersResponse(clusters []Cluster) *ListClustersResponse {
	p := ListClustersResponse{}
	p.Clusters = clusters
	return &p
}

// NewListClustersResponseWithDefaults instantiates a new ListClustersResponse object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClustersResponseWithDefaults() *ListClustersResponse {
	p := ListClustersResponse{}
	return &p
}

// GetClusters returns the Clusters field value.
func (o *ListClustersResponse) GetClusters() []Cluster {
	if o == nil {
		var ret []Cluster
		return ret
	}

	return o.Clusters
}

// SetClusters sets field value.
func (o *ListClustersResponse) SetClusters(v []Cluster) {
	o.Clusters = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ListClustersResponse) GetPagination() KeysetPaginationResponse {
	if o == nil || o.Pagination == nil {
		var ret KeysetPaginationResponse
		return ret
	}
	return *o.Pagination
}

// SetPagination gets a reference to the given KeysetPaginationResponse and assigns it to the Pagination field.
func (o *ListClustersResponse) SetPagination(v KeysetPaginationResponse) {
	o.Pagination = &v
}

func (o ListClustersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clusters"] = o.Clusters
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ListClustersResponse) UnmarshalJSON(bytes []byte) (err error) {
	varListClustersResponse := listClustersResponse{}

	if err = json.Unmarshal(bytes, &varListClustersResponse); err == nil {
		*o = ListClustersResponse(varListClustersResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "clusters")
		delete(additionalProperties, "pagination")
		o.AdditionalProperties = additionalProperties
	}

	return err
}
