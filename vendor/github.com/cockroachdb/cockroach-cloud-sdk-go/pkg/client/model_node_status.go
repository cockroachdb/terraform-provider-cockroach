// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-03-31

package client

import (
	"encoding/json"
	"fmt"
)

// NodeStatus the model 'NodeStatus'.
type NodeStatus string

// List of NodeStatus.
const (
	NODESTATUS_NODE_STATUS_UNSPECIFIED NodeStatus = "NODE_STATUS_UNSPECIFIED"
	NODESTATUS_LIVE                    NodeStatus = "LIVE"
	NODESTATUS_NOT_READY               NodeStatus = "NOT_READY"
)

// All allowed values of NodeStatus enum.
var AllowedNodeStatusEnumValues = []NodeStatus{
	"NODE_STATUS_UNSPECIFIED",
	"LIVE",
	"NOT_READY",
}

func (v *NodeStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NodeStatus(value)
	for _, existing := range AllowedNodeStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NodeStatus", value)
}

// NewNodeStatusFromValue returns a pointer to a valid NodeStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewNodeStatusFromValue(v string) (*NodeStatus, error) {
	ev := NodeStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NodeStatus: valid values are %v", v, AllowedNodeStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v NodeStatus) IsValid() bool {
	for _, existing := range AllowedNodeStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NodeStatus value.
func (v NodeStatus) Ptr() *NodeStatus {
	return &v
}
