// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2023-04-10

package client

// PrivateEndpointConnection struct for PrivateEndpointConnection.
type PrivateEndpointConnection struct {
	CloudProvider CloudProviderType `json:"cloud_provider"`
	// endpoint_id is the id of the private endpoint associated with this connection. The private endpoint is customer-created and its id is generated by the cloud provider at endpoint creation time.
	EndpointId string `json:"endpoint_id"`
	// endpoint_service_id is the id of the private endpoint service associated with this connection.
	EndpointServiceId string `json:"endpoint_service_id"`
	// external_owner_id uniquely identifies the owner of the private endpoint connection cloud resource. This idenfier is the AWS account id owning the PrivateLink connection. This field is only valid on AWS clusters.
	ExternalOwnerId *string `json:"external_owner_id,omitempty"`
	// region_name is the cloud provider region name (e.g. us-east-1).
	RegionName *string                         `json:"region_name,omitempty"`
	Status     PrivateEndpointConnectionStatus `json:"status"`
}

// NewPrivateEndpointConnection instantiates a new PrivateEndpointConnection object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateEndpointConnection(cloudProvider CloudProviderType, endpointId string, endpointServiceId string, status PrivateEndpointConnectionStatus) *PrivateEndpointConnection {
	p := PrivateEndpointConnection{}
	p.CloudProvider = cloudProvider
	p.EndpointId = endpointId
	p.EndpointServiceId = endpointServiceId
	p.Status = status
	return &p
}

// NewPrivateEndpointConnectionWithDefaults instantiates a new PrivateEndpointConnection object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateEndpointConnectionWithDefaults() *PrivateEndpointConnection {
	p := PrivateEndpointConnection{}
	return &p
}

// GetCloudProvider returns the CloudProvider field value.
func (o *PrivateEndpointConnection) GetCloudProvider() CloudProviderType {
	if o == nil {
		var ret CloudProviderType
		return ret
	}

	return o.CloudProvider
}

// SetCloudProvider sets field value.
func (o *PrivateEndpointConnection) SetCloudProvider(v CloudProviderType) {
	o.CloudProvider = v
}

// GetEndpointId returns the EndpointId field value.
func (o *PrivateEndpointConnection) GetEndpointId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndpointId
}

// SetEndpointId sets field value.
func (o *PrivateEndpointConnection) SetEndpointId(v string) {
	o.EndpointId = v
}

// GetEndpointServiceId returns the EndpointServiceId field value.
func (o *PrivateEndpointConnection) GetEndpointServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndpointServiceId
}

// SetEndpointServiceId sets field value.
func (o *PrivateEndpointConnection) SetEndpointServiceId(v string) {
	o.EndpointServiceId = v
}

// GetExternalOwnerId returns the ExternalOwnerId field value if set, zero value otherwise.
func (o *PrivateEndpointConnection) GetExternalOwnerId() string {
	if o == nil || o.ExternalOwnerId == nil {
		var ret string
		return ret
	}
	return *o.ExternalOwnerId
}

// SetExternalOwnerId gets a reference to the given string and assigns it to the ExternalOwnerId field.
func (o *PrivateEndpointConnection) SetExternalOwnerId(v string) {
	o.ExternalOwnerId = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *PrivateEndpointConnection) GetRegionName() string {
	if o == nil || o.RegionName == nil {
		var ret string
		return ret
	}
	return *o.RegionName
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *PrivateEndpointConnection) SetRegionName(v string) {
	o.RegionName = &v
}

// GetStatus returns the Status field value.
func (o *PrivateEndpointConnection) GetStatus() PrivateEndpointConnectionStatus {
	if o == nil {
		var ret PrivateEndpointConnectionStatus
		return ret
	}

	return o.Status
}

// SetStatus sets field value.
func (o *PrivateEndpointConnection) SetStatus(v PrivateEndpointConnectionStatus) {
	o.Status = v
}
