// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2023-04-10

package client

import (
	"fmt"
)

// PrivateEndpointConnectionStatus PrivateEndpointConnectionStatus enumerates the possible statuses for the private endpoints connection.
type PrivateEndpointConnectionStatus string

// List of PrivateEndpointConnectionStatus.
const (
	PRIVATEENDPOINTCONNECTIONSTATUS_PENDING            PrivateEndpointConnectionStatus = "STATUS_PENDING"
	PRIVATEENDPOINTCONNECTIONSTATUS_PENDING_ACCEPTANCE PrivateEndpointConnectionStatus = "STATUS_PENDING_ACCEPTANCE"
	PRIVATEENDPOINTCONNECTIONSTATUS_AVAILABLE          PrivateEndpointConnectionStatus = "STATUS_AVAILABLE"
	PRIVATEENDPOINTCONNECTIONSTATUS_DELETING           PrivateEndpointConnectionStatus = "STATUS_DELETING"
	PRIVATEENDPOINTCONNECTIONSTATUS_DELETED            PrivateEndpointConnectionStatus = "STATUS_DELETED"
	PRIVATEENDPOINTCONNECTIONSTATUS_REJECTED           PrivateEndpointConnectionStatus = "STATUS_REJECTED"
	PRIVATEENDPOINTCONNECTIONSTATUS_FAILED             PrivateEndpointConnectionStatus = "STATUS_FAILED"
	PRIVATEENDPOINTCONNECTIONSTATUS_EXPIRED            PrivateEndpointConnectionStatus = "STATUS_EXPIRED"
)

// All allowed values of PrivateEndpointConnectionStatus enum.
var AllowedPrivateEndpointConnectionStatusEnumValues = []PrivateEndpointConnectionStatus{
	"STATUS_PENDING",
	"STATUS_PENDING_ACCEPTANCE",
	"STATUS_AVAILABLE",
	"STATUS_DELETING",
	"STATUS_DELETED",
	"STATUS_REJECTED",
	"STATUS_FAILED",
	"STATUS_EXPIRED",
}

// NewPrivateEndpointConnectionStatusFromValue returns a pointer to a valid PrivateEndpointConnectionStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewPrivateEndpointConnectionStatusFromValue(v string) (*PrivateEndpointConnectionStatus, error) {
	ev := PrivateEndpointConnectionStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PrivateEndpointConnectionStatus: valid values are %v", v, AllowedPrivateEndpointConnectionStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v PrivateEndpointConnectionStatus) IsValid() bool {
	for _, existing := range AllowedPrivateEndpointConnectionStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PrivateEndpointConnectionStatus value.
func (v PrivateEndpointConnectionStatus) Ptr() *PrivateEndpointConnectionStatus {
	return &v
}
