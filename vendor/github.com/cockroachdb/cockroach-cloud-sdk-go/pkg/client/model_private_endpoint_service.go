// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2022-09-20

package client

import (
	"encoding/json"
)

// PrivateEndpointService struct for PrivateEndpointService.
type PrivateEndpointService struct {
	Aws           AWSPrivateLinkServiceDetail `json:"aws"`
	CloudProvider ApiCloudProvider            `json:"cloud_provider"`
	// region_name is the cloud provider region name (i.e. us-east-1).
	RegionName string                       `json:"region_name"`
	Status     PrivateEndpointServiceStatus `json:"status"`
}

// NewPrivateEndpointService instantiates a new PrivateEndpointService object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateEndpointService(aws AWSPrivateLinkServiceDetail, cloudProvider ApiCloudProvider, regionName string, status PrivateEndpointServiceStatus) *PrivateEndpointService {
	p := PrivateEndpointService{}
	p.Aws = aws
	p.CloudProvider = cloudProvider
	p.RegionName = regionName
	p.Status = status
	return &p
}

// NewPrivateEndpointServiceWithDefaults instantiates a new PrivateEndpointService object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateEndpointServiceWithDefaults() *PrivateEndpointService {
	p := PrivateEndpointService{}
	return &p
}

// GetAws returns the Aws field value.
func (o *PrivateEndpointService) GetAws() AWSPrivateLinkServiceDetail {
	if o == nil {
		var ret AWSPrivateLinkServiceDetail
		return ret
	}

	return o.Aws
}

// SetAws sets field value.
func (o *PrivateEndpointService) SetAws(v AWSPrivateLinkServiceDetail) {
	o.Aws = v
}

// GetCloudProvider returns the CloudProvider field value.
func (o *PrivateEndpointService) GetCloudProvider() ApiCloudProvider {
	if o == nil {
		var ret ApiCloudProvider
		return ret
	}

	return o.CloudProvider
}

// SetCloudProvider sets field value.
func (o *PrivateEndpointService) SetCloudProvider(v ApiCloudProvider) {
	o.CloudProvider = v
}

// GetRegionName returns the RegionName field value.
func (o *PrivateEndpointService) GetRegionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegionName
}

// SetRegionName sets field value.
func (o *PrivateEndpointService) SetRegionName(v string) {
	o.RegionName = v
}

// GetStatus returns the Status field value.
func (o *PrivateEndpointService) GetStatus() PrivateEndpointServiceStatus {
	if o == nil {
		var ret PrivateEndpointServiceStatus
		return ret
	}

	return o.Status
}

// SetStatus sets field value.
func (o *PrivateEndpointService) SetStatus(v PrivateEndpointServiceStatus) {
	o.Status = v
}

func (o PrivateEndpointService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["aws"] = o.Aws
	}
	if true {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if true {
		toSerialize["region_name"] = o.RegionName
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}
