// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2023-04-10

package client

// CMEKRegionInfo CMEKRegionInfo contains the status of CMEK within a region.  This includes current and past key specifications used within the region,  as well as the status of those specifications.
type CMEKRegionInfo struct {
	KeyInfos *[]CMEKKeyInfo `json:"key_infos,omitempty"`
	Region   *string        `json:"region,omitempty"`
	Status   *CMEKStatus    `json:"status,omitempty"`
}

// NewCMEKRegionInfo instantiates a new CMEKRegionInfo object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCMEKRegionInfo() *CMEKRegionInfo {
	p := CMEKRegionInfo{}
	return &p
}

// GetKeyInfos returns the KeyInfos field value if set, zero value otherwise.
func (o *CMEKRegionInfo) GetKeyInfos() []CMEKKeyInfo {
	if o == nil || o.KeyInfos == nil {
		var ret []CMEKKeyInfo
		return ret
	}
	return *o.KeyInfos
}

// SetKeyInfos gets a reference to the given []CMEKKeyInfo and assigns it to the KeyInfos field.
func (o *CMEKRegionInfo) SetKeyInfos(v []CMEKKeyInfo) {
	o.KeyInfos = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CMEKRegionInfo) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *CMEKRegionInfo) SetRegion(v string) {
	o.Region = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CMEKRegionInfo) GetStatus() CMEKStatus {
	if o == nil || o.Status == nil {
		var ret CMEKStatus
		return ret
	}
	return *o.Status
}

// SetStatus gets a reference to the given CMEKStatus and assigns it to the Status field.
func (o *CMEKRegionInfo) SetStatus(v CMEKStatus) {
	o.Status = &v
}
