// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2023-04-10

package client

import (
	"time"
)

// LogExportClusterInfo LogExportClusterInfo contains a package of information that fully describes both the intended state of the log export configuration for a specific cluster but also some metadata around its deployment status, any error messages, and some timestamps..
type LogExportClusterInfo struct {
	ClusterId   *string                        `json:"cluster_id,omitempty"`
	CreatedAt   *time.Time                     `json:"created_at,omitempty"`
	Spec        *LogExportClusterSpecification `json:"spec,omitempty"`
	Status      *LogExportStatus               `json:"status,omitempty"`
	UpdatedAt   *time.Time                     `json:"updated_at,omitempty"`
	UserMessage *string                        `json:"user_message,omitempty"`
}

// NewLogExportClusterInfo instantiates a new LogExportClusterInfo object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogExportClusterInfo() *LogExportClusterInfo {
	p := LogExportClusterInfo{}
	return &p
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *LogExportClusterInfo) GetClusterId() string {
	if o == nil || o.ClusterId == nil {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *LogExportClusterInfo) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *LogExportClusterInfo) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *LogExportClusterInfo) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *LogExportClusterInfo) GetSpec() LogExportClusterSpecification {
	if o == nil || o.Spec == nil {
		var ret LogExportClusterSpecification
		return ret
	}
	return *o.Spec
}

// SetSpec gets a reference to the given LogExportClusterSpecification and assigns it to the Spec field.
func (o *LogExportClusterInfo) SetSpec(v LogExportClusterSpecification) {
	o.Spec = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LogExportClusterInfo) GetStatus() LogExportStatus {
	if o == nil || o.Status == nil {
		var ret LogExportStatus
		return ret
	}
	return *o.Status
}

// SetStatus gets a reference to the given LogExportStatus and assigns it to the Status field.
func (o *LogExportClusterInfo) SetStatus(v LogExportStatus) {
	o.Status = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *LogExportClusterInfo) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *LogExportClusterInfo) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUserMessage returns the UserMessage field value if set, zero value otherwise.
func (o *LogExportClusterInfo) GetUserMessage() string {
	if o == nil || o.UserMessage == nil {
		var ret string
		return ret
	}
	return *o.UserMessage
}

// SetUserMessage gets a reference to the given string and assigns it to the UserMessage field.
func (o *LogExportClusterInfo) SetUserMessage(v string) {
	o.UserMessage = &v
}
