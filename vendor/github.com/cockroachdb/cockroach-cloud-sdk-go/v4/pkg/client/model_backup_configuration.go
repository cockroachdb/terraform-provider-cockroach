// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2024-09-16

package client

// BackupConfiguration struct for BackupConfiguration.
type BackupConfiguration struct {
	// Indicates whether the backup configuration is enabled and can run.
	Enabled bool `json:"enabled"`
	// The frequency in minutes that backups are taken. Changes that are more recent may not be included in the latest backup and may be lost during a restore.
	FrequencyMinutes int32 `json:"frequency_minutes"`
	// The number of days backups are retained for.
	RetentionDays int32 `json:"retention_days"`
}

// NewBackupConfiguration instantiates a new BackupConfiguration object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupConfiguration(enabled bool, frequencyMinutes int32, retentionDays int32) *BackupConfiguration {
	p := BackupConfiguration{}
	p.Enabled = enabled
	p.FrequencyMinutes = frequencyMinutes
	p.RetentionDays = retentionDays
	return &p
}

// NewBackupConfigurationWithDefaults instantiates a new BackupConfiguration object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupConfigurationWithDefaults() *BackupConfiguration {
	p := BackupConfiguration{}
	return &p
}

// GetEnabled returns the Enabled field value.
func (o *BackupConfiguration) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// SetEnabled sets field value.
func (o *BackupConfiguration) SetEnabled(v bool) {
	o.Enabled = v
}

// GetFrequencyMinutes returns the FrequencyMinutes field value.
func (o *BackupConfiguration) GetFrequencyMinutes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FrequencyMinutes
}

// SetFrequencyMinutes sets field value.
func (o *BackupConfiguration) SetFrequencyMinutes(v int32) {
	o.FrequencyMinutes = v
}

// GetRetentionDays returns the RetentionDays field value.
func (o *BackupConfiguration) GetRetentionDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RetentionDays
}

// SetRetentionDays sets field value.
func (o *BackupConfiguration) SetRetentionDays(v int32) {
	o.RetentionDays = v
}
