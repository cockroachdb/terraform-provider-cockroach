// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2024-09-16

package client

import (
	"time"
)

// ClusterMajorVersion For more information about CockroachDB cluster version support, see https://www.cockroachlabs.com/docs/releases/release-support-policy.html.
type ClusterMajorVersion struct {
	AllowedUpgrades []string                             `json:"allowed_upgrades"`
	ReleaseType     ReleaseTypeType                      `json:"release_type"`
	SupportEnd      time.Time                            `json:"support_end"`
	SupportStatus   ClusterMajorVersionSupportStatusType `json:"support_status"`
	Version         string                               `json:"version"`
}

// NewClusterMajorVersion instantiates a new ClusterMajorVersion object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterMajorVersion(allowedUpgrades []string, releaseType ReleaseTypeType, supportEnd time.Time, supportStatus ClusterMajorVersionSupportStatusType, version string) *ClusterMajorVersion {
	p := ClusterMajorVersion{}
	p.AllowedUpgrades = allowedUpgrades
	p.ReleaseType = releaseType
	p.SupportEnd = supportEnd
	p.SupportStatus = supportStatus
	p.Version = version
	return &p
}

// NewClusterMajorVersionWithDefaults instantiates a new ClusterMajorVersion object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterMajorVersionWithDefaults() *ClusterMajorVersion {
	p := ClusterMajorVersion{}
	return &p
}

// GetAllowedUpgrades returns the AllowedUpgrades field value.
func (o *ClusterMajorVersion) GetAllowedUpgrades() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AllowedUpgrades
}

// SetAllowedUpgrades sets field value.
func (o *ClusterMajorVersion) SetAllowedUpgrades(v []string) {
	o.AllowedUpgrades = v
}

// GetReleaseType returns the ReleaseType field value.
func (o *ClusterMajorVersion) GetReleaseType() ReleaseTypeType {
	if o == nil {
		var ret ReleaseTypeType
		return ret
	}

	return o.ReleaseType
}

// SetReleaseType sets field value.
func (o *ClusterMajorVersion) SetReleaseType(v ReleaseTypeType) {
	o.ReleaseType = v
}

// GetSupportEnd returns the SupportEnd field value.
func (o *ClusterMajorVersion) GetSupportEnd() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.SupportEnd
}

// SetSupportEnd sets field value.
func (o *ClusterMajorVersion) SetSupportEnd(v time.Time) {
	o.SupportEnd = v
}

// GetSupportStatus returns the SupportStatus field value.
func (o *ClusterMajorVersion) GetSupportStatus() ClusterMajorVersionSupportStatusType {
	if o == nil {
		var ret ClusterMajorVersionSupportStatusType
		return ret
	}

	return o.SupportStatus
}

// SetSupportStatus sets field value.
func (o *ClusterMajorVersion) SetSupportStatus(v ClusterMajorVersionSupportStatusType) {
	o.SupportStatus = v
}

// GetVersion returns the Version field value.
func (o *ClusterMajorVersion) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// SetVersion sets field value.
func (o *ClusterMajorVersion) SetVersion(v string) {
	o.Version = v
}
