// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2024-09-16

package client

import (
	"time"
)

// CreateBlackoutWindowRequest struct for CreateBlackoutWindowRequest.
type CreateBlackoutWindowRequest struct {
	// The end time of the blackout window (UTC). Can be up to 14 days after the start time. Must not be more than three months after the current time.
	EndTime time.Time `json:"end_time"`
	// The start time of the blackout window (UTC). Must be scheduled at least 7 days in advance.
	StartTime time.Time `json:"start_time"`
}

// NewCreateBlackoutWindowRequest instantiates a new CreateBlackoutWindowRequest object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBlackoutWindowRequest(endTime time.Time, startTime time.Time) *CreateBlackoutWindowRequest {
	p := CreateBlackoutWindowRequest{}
	p.EndTime = endTime
	p.StartTime = startTime
	return &p
}

// NewCreateBlackoutWindowRequestWithDefaults instantiates a new CreateBlackoutWindowRequest object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBlackoutWindowRequestWithDefaults() *CreateBlackoutWindowRequest {
	p := CreateBlackoutWindowRequest{}
	return &p
}

// GetEndTime returns the EndTime field value.
func (o *CreateBlackoutWindowRequest) GetEndTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndTime
}

// SetEndTime sets field value.
func (o *CreateBlackoutWindowRequest) SetEndTime(v time.Time) {
	o.EndTime = v
}

// GetStartTime returns the StartTime field value.
func (o *CreateBlackoutWindowRequest) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// SetStartTime sets field value.
func (o *CreateBlackoutWindowRequest) SetStartTime(v time.Time) {
	o.StartTime = v
}
