// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2024-09-16

package client

// CreateUserResponse Response when creating a new user via SCIM 2.0.
type CreateUserResponse struct {
	Active      *bool           `json:"active,omitempty"`
	DisplayName *string         `json:"displayName,omitempty"`
	Emails      *[]ScimEmail    `json:"emails,omitempty"`
	ExternalId  *string         `json:"externalId,omitempty"`
	Groups      *[]ScimResource `json:"groups,omitempty"`
	Id          string          `json:"id"`
	Meta        *ScimMetadata   `json:"meta,omitempty"`
	Name        *ScimName       `json:"name,omitempty"`
	Schemas     []string        `json:"schemas"`
	UserName    *string         `json:"userName,omitempty"`
}

// NewCreateUserResponse instantiates a new CreateUserResponse object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserResponse(id string, schemas []string) *CreateUserResponse {
	p := CreateUserResponse{}
	p.Id = id
	p.Schemas = schemas
	return &p
}

// NewCreateUserResponseWithDefaults instantiates a new CreateUserResponse object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserResponseWithDefaults() *CreateUserResponse {
	p := CreateUserResponse{}
	return &p
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CreateUserResponse) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CreateUserResponse) SetActive(v bool) {
	o.Active = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CreateUserResponse) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CreateUserResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *CreateUserResponse) GetEmails() []ScimEmail {
	if o == nil || o.Emails == nil {
		var ret []ScimEmail
		return ret
	}
	return *o.Emails
}

// SetEmails gets a reference to the given []ScimEmail and assigns it to the Emails field.
func (o *CreateUserResponse) SetEmails(v []ScimEmail) {
	o.Emails = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *CreateUserResponse) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *CreateUserResponse) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *CreateUserResponse) GetGroups() []ScimResource {
	if o == nil || o.Groups == nil {
		var ret []ScimResource
		return ret
	}
	return *o.Groups
}

// SetGroups gets a reference to the given []ScimResource and assigns it to the Groups field.
func (o *CreateUserResponse) SetGroups(v []ScimResource) {
	o.Groups = &v
}

// GetId returns the Id field value.
func (o *CreateUserResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// SetId sets field value.
func (o *CreateUserResponse) SetId(v string) {
	o.Id = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *CreateUserResponse) GetMeta() ScimMetadata {
	if o == nil || o.Meta == nil {
		var ret ScimMetadata
		return ret
	}
	return *o.Meta
}

// SetMeta gets a reference to the given ScimMetadata and assigns it to the Meta field.
func (o *CreateUserResponse) SetMeta(v ScimMetadata) {
	o.Meta = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateUserResponse) GetName() ScimName {
	if o == nil || o.Name == nil {
		var ret ScimName
		return ret
	}
	return *o.Name
}

// SetName gets a reference to the given ScimName and assigns it to the Name field.
func (o *CreateUserResponse) SetName(v ScimName) {
	o.Name = &v
}

// GetSchemas returns the Schemas field value.
func (o *CreateUserResponse) GetSchemas() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Schemas
}

// SetSchemas sets field value.
func (o *CreateUserResponse) SetSchemas(v []string) {
	o.Schemas = v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *CreateUserResponse) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *CreateUserResponse) SetUserName(v string) {
	o.UserName = &v
}
