// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2024-09-16

package client

import (
	"fmt"
)

// EgressPrivateEndpointTargetServiceTypeType the model 'EgressPrivateEndpointTargetServiceTypeType'.
type EgressPrivateEndpointTargetServiceTypeType string

// List of EgressPrivateEndpointTargetServiceType.Type.
const (
	EGRESSPRIVATEENDPOINTTARGETSERVICETYPETYPE_PRIVATE_SERVICE EgressPrivateEndpointTargetServiceTypeType = "PRIVATE_SERVICE"
	EGRESSPRIVATEENDPOINTTARGETSERVICETYPETYPE_MSK_SASL_SCRAM  EgressPrivateEndpointTargetServiceTypeType = "MSK_SASL_SCRAM"
	EGRESSPRIVATEENDPOINTTARGETSERVICETYPETYPE_MSK_SASL_IAM    EgressPrivateEndpointTargetServiceTypeType = "MSK_SASL_IAM"
	EGRESSPRIVATEENDPOINTTARGETSERVICETYPETYPE_MSK_TLS         EgressPrivateEndpointTargetServiceTypeType = "MSK_TLS"
)

// All allowed values of EgressPrivateEndpointTargetServiceTypeType enum.
var AllowedEgressPrivateEndpointTargetServiceTypeTypeEnumValues = []EgressPrivateEndpointTargetServiceTypeType{
	"PRIVATE_SERVICE",
	"MSK_SASL_SCRAM",
	"MSK_SASL_IAM",
	"MSK_TLS",
}

// NewEgressPrivateEndpointTargetServiceTypeTypeFromValue returns a pointer to a valid EgressPrivateEndpointTargetServiceTypeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewEgressPrivateEndpointTargetServiceTypeTypeFromValue(v string) (*EgressPrivateEndpointTargetServiceTypeType, error) {
	ev := EgressPrivateEndpointTargetServiceTypeType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EgressPrivateEndpointTargetServiceTypeType: valid values are %v", v, AllowedEgressPrivateEndpointTargetServiceTypeTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v EgressPrivateEndpointTargetServiceTypeType) IsValid() bool {
	for _, existing := range AllowedEgressPrivateEndpointTargetServiceTypeTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EgressPrivateEndpointTargetServiceType.Type value.
func (v EgressPrivateEndpointTargetServiceTypeType) Ptr() *EgressPrivateEndpointTargetServiceTypeType {
	return &v
}
