// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2024-09-16

package client

// RegionalDisruptorSpecification RegionalDisruptorSpecification represents how a region is disrupted. To reduce ambiguity, a RegionalDisruptorSpecification should not represent a healthy cluster - there should be at least some disrupted pods..
type RegionalDisruptorSpecification struct {
	Azs *[]string `json:"azs,omitempty"`
	// is_whole_region denotes whether the whole region should be disrupted.  If a specific pod or az is passed, this value should be false.
	IsWholeRegion bool `json:"is_whole_region"`
	// pods represents each individual CRDB pod name that should be disrupted. Pod names can be found using the [ListClusterNodes api](https://www.cockroachlabs.com/docs/api/cloud/v1#get-/api/v1/clusters/-cluster_id-/nodes).
	Pods *[]string `json:"pods,omitempty"`
	// region_code is the cloud provider specific region code of the region. (i.e us-east1 for gcp, us-east-1 for aws, eastus for azure). Region names for each node the cluster can be found using the [ListClusterNodes api](https://www.cockroachlabs.com/docs/api/cloud/v1#get-/api/v1/clusters/-cluster_id-/nodes).
	RegionCode string `json:"region_code"`
}

// NewRegionalDisruptorSpecification instantiates a new RegionalDisruptorSpecification object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionalDisruptorSpecification(isWholeRegion bool, regionCode string) *RegionalDisruptorSpecification {
	p := RegionalDisruptorSpecification{}
	p.IsWholeRegion = isWholeRegion
	p.RegionCode = regionCode
	return &p
}

// NewRegionalDisruptorSpecificationWithDefaults instantiates a new RegionalDisruptorSpecification object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionalDisruptorSpecificationWithDefaults() *RegionalDisruptorSpecification {
	p := RegionalDisruptorSpecification{}
	return &p
}

// GetAzs returns the Azs field value if set, zero value otherwise.
func (o *RegionalDisruptorSpecification) GetAzs() []string {
	if o == nil || o.Azs == nil {
		var ret []string
		return ret
	}
	return *o.Azs
}

// SetAzs gets a reference to the given []string and assigns it to the Azs field.
func (o *RegionalDisruptorSpecification) SetAzs(v []string) {
	o.Azs = &v
}

// GetIsWholeRegion returns the IsWholeRegion field value.
func (o *RegionalDisruptorSpecification) GetIsWholeRegion() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsWholeRegion
}

// SetIsWholeRegion sets field value.
func (o *RegionalDisruptorSpecification) SetIsWholeRegion(v bool) {
	o.IsWholeRegion = v
}

// GetPods returns the Pods field value if set, zero value otherwise.
func (o *RegionalDisruptorSpecification) GetPods() []string {
	if o == nil || o.Pods == nil {
		var ret []string
		return ret
	}
	return *o.Pods
}

// SetPods gets a reference to the given []string and assigns it to the Pods field.
func (o *RegionalDisruptorSpecification) SetPods(v []string) {
	o.Pods = &v
}

// GetRegionCode returns the RegionCode field value.
func (o *RegionalDisruptorSpecification) GetRegionCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegionCode
}

// SetRegionCode sets field value.
func (o *RegionalDisruptorSpecification) SetRegionCode(v string) {
	o.RegionCode = v
}
