// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2024-09-16

package client

import (
	"time"
)

// Restore struct for Restore.
type Restore struct {
	// The ID of the backup used for this restore operation.
	BackupId string `json:"backup_id"`
	// The percentage of the restore operation that has been completed. The value ranges from 0 to 1.
	CompletionPercent float32 `json:"completion_percent"`
	// The time at which the restore operation was initiated.
	CreatedAt time.Time `json:"created_at"`
	// The unique identifier associated with the restore.
	Id     string            `json:"id"`
	Status RestoreStatusType `json:"status"`
	Type   RestoreTypeType   `json:"type"`
}

// NewRestore instantiates a new Restore object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestore(backupId string, completionPercent float32, createdAt time.Time, id string, status RestoreStatusType, type_ RestoreTypeType) *Restore {
	p := Restore{}
	p.BackupId = backupId
	p.CompletionPercent = completionPercent
	p.CreatedAt = createdAt
	p.Id = id
	p.Status = status
	p.Type = type_
	return &p
}

// NewRestoreWithDefaults instantiates a new Restore object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreWithDefaults() *Restore {
	p := Restore{}
	return &p
}

// GetBackupId returns the BackupId field value.
func (o *Restore) GetBackupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupId
}

// SetBackupId sets field value.
func (o *Restore) SetBackupId(v string) {
	o.BackupId = v
}

// GetCompletionPercent returns the CompletionPercent field value.
func (o *Restore) GetCompletionPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CompletionPercent
}

// SetCompletionPercent sets field value.
func (o *Restore) SetCompletionPercent(v float32) {
	o.CompletionPercent = v
}

// GetCreatedAt returns the CreatedAt field value.
func (o *Restore) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// SetCreatedAt sets field value.
func (o *Restore) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetId returns the Id field value.
func (o *Restore) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// SetId sets field value.
func (o *Restore) SetId(v string) {
	o.Id = v
}

// GetStatus returns the Status field value.
func (o *Restore) GetStatus() RestoreStatusType {
	if o == nil {
		var ret RestoreStatusType
		return ret
	}

	return o.Status
}

// SetStatus sets field value.
func (o *Restore) SetStatus(v RestoreStatusType) {
	o.Status = v
}

// GetType returns the Type field value.
func (o *Restore) GetType() RestoreTypeType {
	if o == nil {
		var ret RestoreTypeType
		return ret
	}

	return o.Type
}

// SetType sets field value.
func (o *Restore) SetType(v RestoreTypeType) {
	o.Type = v
}
