// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2024-09-16

package client

// UpdateBackupConfigurationSpec struct for UpdateBackupConfigurationSpec.
type UpdateBackupConfigurationSpec struct {
	// Indicates whether backups are enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// How frequently in minutes that backups are taken, which will determine the [RPO](https://www.cockroachlabs.com/docs/stable/disaster-recovery-overview#resilience-strategy) of the cluster.  Valid values are [5, 10, 15, 30, 60, 240, 1440].
	FrequencyMinutes *int32 `json:"frequency_minutes,omitempty"`
	// The number of days to retain backups for. Can only be set once, further changes require opening a support ticket. Valid values are [2, 7, 30, 90, 365].
	RetentionDays *int32 `json:"retention_days,omitempty"`
}

// NewUpdateBackupConfigurationSpec instantiates a new UpdateBackupConfigurationSpec object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBackupConfigurationSpec() *UpdateBackupConfigurationSpec {
	p := UpdateBackupConfigurationSpec{}
	return &p
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdateBackupConfigurationSpec) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdateBackupConfigurationSpec) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFrequencyMinutes returns the FrequencyMinutes field value if set, zero value otherwise.
func (o *UpdateBackupConfigurationSpec) GetFrequencyMinutes() int32 {
	if o == nil || o.FrequencyMinutes == nil {
		var ret int32
		return ret
	}
	return *o.FrequencyMinutes
}

// SetFrequencyMinutes gets a reference to the given int32 and assigns it to the FrequencyMinutes field.
func (o *UpdateBackupConfigurationSpec) SetFrequencyMinutes(v int32) {
	o.FrequencyMinutes = &v
}

// GetRetentionDays returns the RetentionDays field value if set, zero value otherwise.
func (o *UpdateBackupConfigurationSpec) GetRetentionDays() int32 {
	if o == nil || o.RetentionDays == nil {
		var ret int32
		return ret
	}
	return *o.RetentionDays
}

// SetRetentionDays gets a reference to the given int32 and assigns it to the RetentionDays field.
func (o *UpdateBackupConfigurationSpec) SetRetentionDays(v int32) {
	o.RetentionDays = &v
}
