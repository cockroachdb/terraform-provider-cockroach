// Copyright 2023 The Cockroach Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// CockroachDB Cloud API
// API version: 2024-09-16

package client

import (
	"time"
)

// UpdatePhysicalReplicationStreamSpec struct for UpdatePhysicalReplicationStreamSpec.
type UpdatePhysicalReplicationStreamSpec struct {
	// failover_at is the crdb system time at which failover occurs. If the user sets the status to 'FAILING_OVER' but omits failover_at, the failover time will default to the latest consistent replicated time. Otherwise, the user can pick a time up to one hour in the future to schedule a failover, or a time in the past to restore the cluster to a recent state. If the time is in the past, the API will make a best-effort attempt to validate that the time is not earlier than the retained time. In this case, if the retained time is updated in between validation and failover execution and the failover time becomes invalid, the stream will failover to the retained time. failover_at is not required when updating the status to 'CANCELED'.
	FailoverAt *time.Time                   `json:"failover_at,omitempty"`
	Status     *ReplicationStreamStatusType `json:"status,omitempty"`
}

// NewUpdatePhysicalReplicationStreamSpec instantiates a new UpdatePhysicalReplicationStreamSpec object.
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePhysicalReplicationStreamSpec() *UpdatePhysicalReplicationStreamSpec {
	p := UpdatePhysicalReplicationStreamSpec{}
	return &p
}

// GetFailoverAt returns the FailoverAt field value if set, zero value otherwise.
func (o *UpdatePhysicalReplicationStreamSpec) GetFailoverAt() time.Time {
	if o == nil || o.FailoverAt == nil {
		var ret time.Time
		return ret
	}
	return *o.FailoverAt
}

// SetFailoverAt gets a reference to the given time.Time and assigns it to the FailoverAt field.
func (o *UpdatePhysicalReplicationStreamSpec) SetFailoverAt(v time.Time) {
	o.FailoverAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdatePhysicalReplicationStreamSpec) GetStatus() ReplicationStreamStatusType {
	if o == nil || o.Status == nil {
		var ret ReplicationStreamStatusType
		return ret
	}
	return *o.Status
}

// SetStatus gets a reference to the given ReplicationStreamStatusType and assigns it to the Status field.
func (o *UpdatePhysicalReplicationStreamSpec) SetStatus(v ReplicationStreamStatusType) {
	o.Status = &v
}
